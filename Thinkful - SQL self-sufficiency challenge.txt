-- 1
SELECT column_name, 
       data_type,
       character_maximum_length
FROM information_schema.columns 
WHERE table_name = 'naep';

-- 2
SELECT * 
FROM naep
LIMIT 50;

-- 3
SELECT state,
       MIN(avg_math_4_score) AS min_avg_math_4_score,
       MAX(avg_math_4_score) AS max_avg_math_4_score,
       AVG(avg_math_4_score) AS mean_avg_math_4_score,
       COUNT(avg_math_4_score) AS count_avg_math_4_score
FROM naep
GROUP BY state
ORDER BY state;

-- 4
SELECT state,
       MIN(avg_math_4_score) AS min_avg_math_4_score,
       MAX(avg_math_4_score) AS max_avg_math_4_score,
       AVG(avg_math_4_score) AS mean_avg_math_4_score,
       COUNT(avg_math_4_score) AS count_avg_math_4_score
FROM naep
GROUP BY state
HAVING MAX(avg_math_4_score) - MIN(avg_math_4_score) > 30
ORDER BY state;

-- 5
WITH bottom_10_states
AS
(
SELECT state, 
       year, 
       avg_math_4_score
FROM naep
WHERE year = 2000
ORDER BY avg_math_4_score
LIMIT 10
)
SELECT state
FROM bottom_10_states;

-- 6
SELECT ROUND(AVG(avg_math_4_score), 2) AS overall_2000_avg
FROM naep
WHERE year = 2000
GROUP BY year;

-- 7
WITH mean_avg_math_4_score
AS
(
SELECT AVG(avg_math_4_score) AS overall_2000_avg
FROM naep
WHERE year = 2000
GROUP BY year
)
SELECT state AS below_average_states_y2000
FROM naep
WHERE year = 2000
AND avg_math_4_score < (SELECT overall_2000_avg
                        FROM mean_avg_math_4_score);

-- 8
WITH null_avg_math_4_score_2000 
AS
(
SELECT state
FROM naep
WHERE year = 2000
AND avg_math_4_score IS NULL
)
SELECT state AS scores_missing_y2000
FROM null_avg_math_4_score_2000;

-- 9
SELECT n.state, 
       ROUND(n.avg_math_4_score, 2) AS avg_math_4_score,
       f.total_expenditure
FROM naep n
LEFT OUTER JOIN finance f
ON n.id = f.id
WHERE n.year = 2000
AND avg_math_4_score IS NOT NULL
ORDER BY total_expenditure DESC;
